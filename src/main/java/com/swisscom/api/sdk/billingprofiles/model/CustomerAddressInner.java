/**
 * Billing Profiles
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.swisscom.api.sdk.billingprofiles.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * CustomerAddressInner
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-19T14:23:28.935+02:00")
public class CustomerAddressInner   {
  /**
   * The address type of the billing profile. It will either be a street address or a PO Box. A street address consists of either a houseName or a street and houseNumber. A PO Box address always defines a postBox. All addresses may contain a zip code and city.
   */
  public enum TypeEnum {
    @SerializedName("main")
    MAIN("main"),
    
    @SerializedName("bill")
    BILL("bill"),
    
    @SerializedName("correspondence")
    CORRESPONDENCE("correspondence"),
    
    @SerializedName("envelope")
    ENVELOPE("envelope");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("houseName")
  private String houseName = null;

  @SerializedName("street")
  private String street = null;

  @SerializedName("houseNumber")
  private String houseNumber = null;

  @SerializedName("postBox")
  private String postBox = null;

  @SerializedName("zip")
  private String zip = null;

  @SerializedName("city")
  private String city = null;

  public CustomerAddressInner type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The address type of the billing profile. It will either be a street address or a PO Box. A street address consists of either a houseName or a street and houseNumber. A PO Box address always defines a postBox. All addresses may contain a zip code and city.
   * @return type
  **/
  @ApiModelProperty(example = "main", value = "The address type of the billing profile. It will either be a street address or a PO Box. A street address consists of either a houseName or a street and houseNumber. A PO Box address always defines a postBox. All addresses may contain a zip code and city.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CustomerAddressInner houseName(String houseName) {
    this.houseName = houseName;
    return this;
  }

   /**
   * The name of the house.
   * @return houseName
  **/
  @ApiModelProperty(example = "Chalet Fleur de Lys", value = "The name of the house.")
  public String getHouseName() {
    return houseName;
  }

  public void setHouseName(String houseName) {
    this.houseName = houseName;
  }

  public CustomerAddressInner street(String street) {
    this.street = street;
    return this;
  }

   /**
   * The name of the street.
   * @return street
  **/
  @ApiModelProperty(example = "Waldeggstrasse", value = "The name of the street.")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public CustomerAddressInner houseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
    return this;
  }

   /**
   * The house or street number.
   * @return houseNumber
  **/
  @ApiModelProperty(example = "51b", value = "The house or street number.")
  public String getHouseNumber() {
    return houseNumber;
  }

  public void setHouseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
  }

  public CustomerAddressInner postBox(String postBox) {
    this.postBox = postBox;
    return this;
  }

   /**
   * The post office box number. If there is an empty value then the customer has a postBox but no number is indicated.
   * @return postBox
  **/
  @ApiModelProperty(example = "333", value = "The post office box number. If there is an empty value then the customer has a postBox but no number is indicated.")
  public String getPostBox() {
    return postBox;
  }

  public void setPostBox(String postBox) {
    this.postBox = postBox;
  }

  public CustomerAddressInner zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * The Postal Code.
   * @return zip
  **/
  @ApiModelProperty(example = "3097", value = "The Postal Code.")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public CustomerAddressInner city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The name of the city.
   * @return city
  **/
  @ApiModelProperty(example = "Bern", value = "The name of the city.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAddressInner customerAddressInner = (CustomerAddressInner) o;
    return Objects.equals(this.type, customerAddressInner.type) &&
        Objects.equals(this.houseName, customerAddressInner.houseName) &&
        Objects.equals(this.street, customerAddressInner.street) &&
        Objects.equals(this.houseNumber, customerAddressInner.houseNumber) &&
        Objects.equals(this.postBox, customerAddressInner.postBox) &&
        Objects.equals(this.zip, customerAddressInner.zip) &&
        Objects.equals(this.city, customerAddressInner.city);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, houseName, street, houseNumber, postBox, zip, city);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAddressInner {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    houseName: ").append(toIndentedString(houseName)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    postBox: ").append(toIndentedString(postBox)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

